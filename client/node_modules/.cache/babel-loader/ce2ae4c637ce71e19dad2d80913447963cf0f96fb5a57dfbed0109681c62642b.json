{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport '../styles/canvas.scss';\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport { Brush } from \"../tools/ToolsRouter\";\nimport { setSocketListener } from '../sokcet/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    canvasState.setCanvas(canvasRef.current);\n    const [socket, ctx, id] = [canvasState.socket, canvasState.ctx, canvasState.id];\n    if (!socket || !ctx || !id) return;\n    const savedCanvas = localStorage.getItem(id) ? localStorage.getItem(id) : null;\n    if (savedCanvas) {\n      const img = document.createElement('img');\n      img.src = savedCanvas;\n      console.log(img);\n      ctx.drawImage(img, 0, 0, 600, 400);\n      ctx.drawImage(img, 0, 0, 600, 400);\n    }\n    toolState.setTool(new Brush(canvasRef.current, socket, ctx, id));\n    setSocketListener(socket);\n  }, [canvasState.username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 600,\n      height: 400,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}, \"UJgi7ynoup7eqypjnwyX/s32POg=\")), \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["useRef","useEffect","observer","canvasState","toolState","Brush","setSocketListener","jsxDEV","_jsxDEV","Canvas","_s","_c","canvasRef","current","setCanvas","socket","ctx","id","savedCanvas","localStorage","getItem","img","document","createElement","src","console","log","drawImage","setTool","username","className","children","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Canvas.tsx"],"sourcesContent":["import { FC, useRef, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../styles/canvas.scss';\r\n\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\n\r\nimport { Brush } from \"../tools/ToolsRouter\";\r\n\r\nimport {setSocketListener} from '../sokcet/socket';\r\n\r\ninterface CanvasI {\r\n    \r\n}\r\n\r\nconst Canvas: FC<CanvasI> = observer(() => {\r\n    const canvasRef = useRef<null | HTMLCanvasElement>(null);\r\n\r\n    useEffect( () => {\r\n        if(!canvasRef.current) return;\r\n\r\n\r\n        canvasState.setCanvas(canvasRef.current);\r\n        const [socket, ctx, id] = [\r\n            canvasState.socket, \r\n            canvasState.ctx, \r\n            canvasState.id\r\n        ];\r\n\r\n        if(!socket || !ctx || !id) return;\r\n        const savedCanvas = localStorage.getItem(id)\r\n            ? localStorage.getItem(id)\r\n            : null;\r\n        if(savedCanvas) {\r\n            const img = document.createElement('img');\r\n            img.src = savedCanvas;\r\n            console.log(img);\r\n            ctx.drawImage(img, 0, 0, 600, 400);\r\n            ctx.drawImage(img, 0, 0, 600, 400);\r\n        }\r\n        toolState.setTool(new Brush(canvasRef.current, socket, ctx, id));\r\n        setSocketListener(socket);\r\n\r\n    \r\n    }, [canvasState.username]);\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <canvas \r\n                width={600} \r\n                height={400}\r\n                ref={canvasRef}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,SAAaA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAO,uBAAuB;AAE9B,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAASC,KAAK,QAAQ,sBAAsB;AAE5C,SAAQC,iBAAiB,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,MAAmB,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACvC,MAAME,SAAS,GAAGZ,MAAM,CAA2B,IAAI,CAAC;EAExDC,SAAS,CAAE,MAAM;IACb,IAAG,CAACW,SAAS,CAACC,OAAO,EAAE;IAGvBV,WAAW,CAACW,SAAS,CAACF,SAAS,CAACC,OAAO,CAAC;IACxC,MAAM,CAACE,MAAM,EAAEC,GAAG,EAAEC,EAAE,CAAC,GAAG,CACtBd,WAAW,CAACY,MAAM,EAClBZ,WAAW,CAACa,GAAG,EACfb,WAAW,CAACc,EAAE,CACjB;IAED,IAAG,CAACF,MAAM,IAAI,CAACC,GAAG,IAAI,CAACC,EAAE,EAAE;IAC3B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACH,EAAE,CAAC,GACtCE,YAAY,CAACC,OAAO,CAACH,EAAE,CAAC,GACxB,IAAI;IACV,IAAGC,WAAW,EAAE;MACZ,MAAMG,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCF,GAAG,CAACG,GAAG,GAAGN,WAAW;MACrBO,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;MAChBL,GAAG,CAACW,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MAClCL,GAAG,CAACW,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACtC;IACAjB,SAAS,CAACwB,OAAO,CAAC,IAAIvB,KAAK,CAACO,SAAS,CAACC,OAAO,EAAEE,MAAM,EAAEC,GAAG,EAAEC,EAAE,CAAC,CAAC;IAChEX,iBAAiB,CAACS,MAAM,CAAC;EAG7B,CAAC,EAAE,CAACZ,WAAW,CAAC0B,QAAQ,CAAC,CAAC;EAE1B,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBvB,OAAA;MACIwB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,GAAG,EAAEtB;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC,kCAAC;AAACC,GAAA,GAxCG9B,MAAmB;AA0CzB,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}