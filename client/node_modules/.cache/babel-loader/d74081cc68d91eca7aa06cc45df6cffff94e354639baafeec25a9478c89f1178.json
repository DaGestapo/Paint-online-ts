{"ast":null,"code":"import Figure from \"./Figure\";\nexport default class Circle extends Figure {\n  constructor(canvas, socket, ctx, id) {\n    super(canvas, socket, ctx, id);\n    this.toolName = 'circle';\n  }\n  pointerMoveHandler(e) {\n    super.pointerMoveHandler(e);\n    if (this.mouseDown) {\n      this.draw(this.ctx, this.startX, this.startY, this.currentX, this.currentY);\n    }\n  }\n  pointerUpHandler(e) {\n    super.pointerUpHandler(e);\n    this.socket.send(JSON.stringify({\n      id: this.id,\n      method: \"draw\",\n      figure: {\n        type: 'circle',\n        x: this.startX,\n        y: this.startY,\n        w: this.currentX,\n        h: this.currentY\n      }\n    }));\n  }\n  staticDraw(ctx, x, y, w, h) {\n    const nextImg = this.createImg();\n    const radius = this.getRadius(w);\n    ctx.drawImage(nextImg, 0, 0, 600, 400);\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  draw(ctx, x, y, w, h) {\n    const nextImg = this.createImg();\n    const radius = this.getRadius(w);\n    ctx.clearRect(0, 0, 600, 400);\n    ctx.drawImage(nextImg, 0, 0, 600, 400);\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  getRadius(w) {\n    return w > 0 ? w : w < 0 ? w * -1 : w = 0;\n  }\n}","map":{"version":3,"names":["Figure","Circle","constructor","canvas","socket","ctx","id","toolName","pointerMoveHandler","e","mouseDown","draw","startX","startY","currentX","currentY","pointerUpHandler","send","JSON","stringify","method","figure","type","x","y","w","h","staticDraw","nextImg","createImg","radius","getRadius","drawImage","arc","Math","PI","fill","clearRect","beginPath"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/tools/Circle.ts"],"sourcesContent":["import Figure from \"./Figure\";\r\n\r\nexport default class Circle extends Figure {\r\n\r\n    constructor(canvas: HTMLCanvasElement, socket: WebSocket, ctx: CanvasRenderingContext2D, id: string) {\r\n        super(canvas, socket, ctx, id);\r\n        this.toolName = 'circle';\r\n    }\r\n\r\n    protected pointerMoveHandler(e: PointerEvent) {\r\n        super.pointerMoveHandler(e);\r\n\r\n        if(this.mouseDown) {\r\n            this.draw(this.ctx, this.startX, this.startY, this.currentX, this.currentY);\r\n        }\r\n    }\r\n\r\n    protected pointerUpHandler(e: PointerEvent): void {\r\n        super.pointerUpHandler(e);\r\n\r\n         this.socket.send(JSON.stringify({\r\n                 id: this.id,\r\n                 method: \"draw\",\r\n                 figure: {\r\n                     type: 'circle',\r\n                     x: this.startX,\r\n                     y: this.startY,\r\n                     w: this.currentX,\r\n                     h: this.currentY\r\n                 },\r\n             }));\r\n    }\r\n\r\n    public staticDraw(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n        const nextImg = this.createImg();\r\n        const radius = this.getRadius(w);\r\n\r\n        ctx.drawImage(nextImg, 0, 0, 600, 400);\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n        const nextImg = this.createImg();\r\n\r\n        const radius = this.getRadius(w);\r\n        ctx.clearRect(0, 0, 600, 400);\r\n        ctx.drawImage(nextImg, 0, 0, 600, 400);\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    \r\n    }\r\n\r\n    private getRadius(w: number): number {\r\n        return  w > 0? w: w < 0? w * - 1: w = 0;\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,eAAe,MAAMC,MAAM,SAASD,MAAM,CAAC;EAEvCE,WAAWA,CAACC,MAAyB,EAAEC,MAAiB,EAAEC,GAA6B,EAAEC,EAAU,EAAE;IACjG,KAAK,CAACH,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,EAAE,CAAC;IAC9B,IAAI,CAACC,QAAQ,GAAG,QAAQ;EAC5B;EAEUC,kBAAkBA,CAACC,CAAe,EAAE;IAC1C,KAAK,CAACD,kBAAkB,CAACC,CAAC,CAAC;IAE3B,IAAG,IAAI,CAACC,SAAS,EAAE;MACf,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACO,MAAM,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IAC/E;EACJ;EAEUC,gBAAgBA,CAACP,CAAe,EAAQ;IAC9C,KAAK,CAACO,gBAAgB,CAACP,CAAC,CAAC;IAExB,IAAI,CAACL,MAAM,CAACa,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;MACxBb,EAAE,EAAE,IAAI,CAACA,EAAE;MACXc,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE;QACJC,IAAI,EAAE,QAAQ;QACdC,CAAC,EAAE,IAAI,CAACX,MAAM;QACdY,CAAC,EAAE,IAAI,CAACX,MAAM;QACdY,CAAC,EAAE,IAAI,CAACX,QAAQ;QAChBY,CAAC,EAAE,IAAI,CAACX;MACZ;IACJ,CAAC,CAAC,CAAC;EACZ;EAEOY,UAAUA,CAACtB,GAA6B,EAAEkB,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAE;IACzF,MAAME,OAAO,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;IAChC,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,CAACN,CAAC,CAAC;IAEhCpB,GAAG,CAAC2B,SAAS,CAACJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACtCvB,GAAG,CAAC4B,GAAG,CAACV,CAAC,EAAEC,CAAC,EAAEM,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGI,IAAI,CAACC,EAAE,CAAC;IACrC9B,GAAG,CAAC+B,IAAI,CAAC,CAAC;EACd;EAEOzB,IAAIA,CAACN,GAA6B,EAAEkB,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAE;IACnF,MAAME,OAAO,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;IAEhC,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,CAACN,CAAC,CAAC;IAChCpB,GAAG,CAACgC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC7BhC,GAAG,CAAC2B,SAAS,CAACJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACtCvB,GAAG,CAACiC,SAAS,CAAC,CAAC;IACfjC,GAAG,CAAC4B,GAAG,CAACV,CAAC,EAAEC,CAAC,EAAEM,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGI,IAAI,CAACC,EAAE,CAAC;IACrC9B,GAAG,CAAC+B,IAAI,CAAC,CAAC;EAEd;EAEQL,SAASA,CAACN,CAAS,EAAU;IACjC,OAAQA,CAAC,GAAG,CAAC,GAAEA,CAAC,GAAEA,CAAC,GAAG,CAAC,GAAEA,CAAC,GAAG,CAAE,CAAC,GAAEA,CAAC,GAAG,CAAC;EAC3C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}