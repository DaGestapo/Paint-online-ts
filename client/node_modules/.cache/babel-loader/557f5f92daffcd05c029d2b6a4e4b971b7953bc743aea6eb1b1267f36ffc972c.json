{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport '../styles/canvas.scss';\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport { Brush } from \"../tools/Brush\";\nimport { observer } from \"mobx-react\";\nimport { sokcetMessageHandler } from '../sokcet/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(_ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current && id && canvasState.socket) {\n      canvasState.setCanvas(canvasRef.current);\n      toolState.setTool(new Brush(canvasRef.current, canvasState.socket, id));\n      canvasState.socket.onmessage = msg => {\n        const obj = JSON.parse(msg.data);\n        if (!toolState.tool || !canvasState.ctx) return;\n        switch (obj.method) {\n          case 'draw':\n            sokcetMessageHandler(obj);\n            break;\n          case 'finish':\n            canvasState.pushToUndo();\n            canvasState.ctx.beginPath();\n            break;\n          default:\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 600,\n      height: 400,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"UJgi7ynoup7eqypjnwyX/s32POg=\")), \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["useRef","useEffect","canvasState","toolState","Brush","observer","sokcetMessageHandler","jsxDEV","_jsxDEV","Canvas","_s","_c","_ref","id","canvasRef","current","socket","setCanvas","setTool","onmessage","msg","obj","JSON","parse","data","tool","ctx","method","pushToUndo","beginPath","username","className","children","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Canvas.tsx"],"sourcesContent":["import { FC, useRef, useEffect } from \"react\";\r\nimport '../styles/canvas.scss';\r\n\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\nimport { Brush } from \"../tools/Brush\";\r\nimport { observer } from \"mobx-react\";\r\nimport {sokcetMessageHandler} from '../sokcet/socket';\r\n\r\ninterface CanvasI {\r\n    id: string | null;\r\n}\r\n\r\nconst Canvas: FC<CanvasI> = observer(({id }) => {\r\n    const canvasRef = useRef<null | HTMLCanvasElement>(null);\r\n\r\n    useEffect(() => {\r\n        if(canvasRef.current && id && canvasState.socket) {\r\n            canvasState.setCanvas(canvasRef.current);\r\n            toolState.setTool(new Brush(canvasRef.current, canvasState.socket, id));\r\n\r\n           canvasState.socket.onmessage = (msg) => {\r\n                const obj = JSON.parse(msg.data);\r\n                if(!toolState.tool || !canvasState.ctx) return;\r\n                switch (obj.method) {\r\n                    case 'draw':\r\n                        sokcetMessageHandler(obj);\r\n                        break;\r\n\r\n                    case 'finish':\r\n                        canvasState.pushToUndo();\r\n                        canvasState.ctx.beginPath();\r\n                        break;\r\n                \r\n                    default:\r\n                        break;\r\n                }\r\n\r\n           }\r\n        }\r\n    }, [canvasState.username]);\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <canvas \r\n                width={600} \r\n                height={400}\r\n                ref={canvasRef}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,SAAaA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAO,uBAAuB;AAE9B,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAAQC,oBAAoB,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMtD,MAAMC,MAAmB,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAACE,IAAA,IAAW;EAAAF,EAAA;EAAA,IAAV;IAACG;EAAG,CAAC,GAAAD,IAAA;EACvC,MAAME,SAAS,GAAGd,MAAM,CAA2B,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,IAAGa,SAAS,CAACC,OAAO,IAAIF,EAAE,IAAIX,WAAW,CAACc,MAAM,EAAE;MAC9Cd,WAAW,CAACe,SAAS,CAACH,SAAS,CAACC,OAAO,CAAC;MACxCZ,SAAS,CAACe,OAAO,CAAC,IAAId,KAAK,CAACU,SAAS,CAACC,OAAO,EAAEb,WAAW,CAACc,MAAM,EAAEH,EAAE,CAAC,CAAC;MAExEX,WAAW,CAACc,MAAM,CAACG,SAAS,GAAIC,GAAG,IAAK;QACnC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,IAAI,CAAC;QAChC,IAAG,CAACrB,SAAS,CAACsB,IAAI,IAAI,CAACvB,WAAW,CAACwB,GAAG,EAAE;QACxC,QAAQL,GAAG,CAACM,MAAM;UACd,KAAK,MAAM;YACPrB,oBAAoB,CAACe,GAAG,CAAC;YACzB;UAEJ,KAAK,QAAQ;YACTnB,WAAW,CAAC0B,UAAU,CAAC,CAAC;YACxB1B,WAAW,CAACwB,GAAG,CAACG,SAAS,CAAC,CAAC;YAC3B;UAEJ;YACI;QACR;MAEL,CAAC;IACJ;EACJ,CAAC,EAAE,CAAC3B,WAAW,CAAC4B,QAAQ,CAAC,CAAC;EAE1B,oBACItB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBxB,OAAA;MACIyB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,GAAG,EAAErB;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC,kCAAC;AAACC,GAAA,GAtCG/B,MAAmB;AAwCzB,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}