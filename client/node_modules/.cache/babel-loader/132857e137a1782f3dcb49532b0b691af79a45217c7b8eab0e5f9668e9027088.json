{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport '../styles/canvas.scss';\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport { Brush } from \"../tools/Brush\";\nimport { observer } from \"mobx-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(_ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current && id && canvasState.socket) {\n      canvasState.setCanvas(canvasRef.current);\n      toolState.setTool(new Brush(canvasRef.current));\n      canvasState.socket.onopen = () => {\n        var _canvasState$socket;\n        (_canvasState$socket = canvasState.socket) === null || _canvasState$socket === void 0 ? void 0 : _canvasState$socket.send(JSON.stringify({\n          id: id,\n          method: 'connection'\n        }));\n      };\n      canvasState.socket.onmessage = msg => {\n        console.log(msg);\n      };\n    }\n  }, []);\n  const saveCanvas = () => {\n    canvasState.pushToUndo();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 600,\n      height: 400,\n      ref: canvasRef,\n      onPointerDown: saveCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}, \"UJgi7ynoup7eqypjnwyX/s32POg=\")), \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["useRef","useEffect","canvasState","toolState","Brush","observer","jsxDEV","_jsxDEV","Canvas","_s","_c","_ref","id","canvasRef","current","socket","setCanvas","setTool","onopen","_canvasState$socket","send","JSON","stringify","method","onmessage","msg","console","log","saveCanvas","pushToUndo","className","children","width","height","ref","onPointerDown","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Canvas.tsx"],"sourcesContent":["import { FC, useRef, useEffect } from \"react\";\r\nimport '../styles/canvas.scss';\r\n\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\nimport { Brush } from \"../tools/Brush\";\r\nimport { observer } from \"mobx-react\";\r\n\r\ninterface CanvasI {\r\n    id: string | null;\r\n}\r\n\r\nconst Canvas: FC<CanvasI> = observer(({id}) => {\r\n    const canvasRef = useRef<null | HTMLCanvasElement>(null);\r\n\r\n    useEffect(() => {\r\n        if(canvasRef.current && id && canvasState.socket) {\r\n            canvasState.setCanvas(canvasRef.current);\r\n            toolState.setTool(new Brush(canvasRef.current));\r\n\r\n            canvasState.socket.onopen = () => {\r\n                canvasState.socket?.send(JSON.stringify({\r\n                    id: id,\r\n                    method: 'connection'\r\n                }));\r\n            }\r\n\r\n           canvasState.socket.onmessage = (msg) => {\r\n                console.log(msg);\r\n           }\r\n        }\r\n    }, []);\r\n\r\n    const saveCanvas = () => {\r\n        canvasState.pushToUndo();\r\n    }\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <canvas \r\n                width={600} \r\n                height={400}\r\n                ref={canvasRef}\r\n                onPointerDown={saveCanvas}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,SAAaA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAO,uBAAuB;AAE9B,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMtC,MAAMC,MAAmB,GAAAC,EAAA,CAAGJ,QAAQ,CAAAK,EAAA,GAAAD,EAAA,CAACE,IAAA,IAAU;EAAAF,EAAA;EAAA,IAAT;IAACG;EAAE,CAAC,GAAAD,IAAA;EACtC,MAAME,SAAS,GAAGb,MAAM,CAA2B,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,IAAGY,SAAS,CAACC,OAAO,IAAIF,EAAE,IAAIV,WAAW,CAACa,MAAM,EAAE;MAC9Cb,WAAW,CAACc,SAAS,CAACH,SAAS,CAACC,OAAO,CAAC;MACxCX,SAAS,CAACc,OAAO,CAAC,IAAIb,KAAK,CAACS,SAAS,CAACC,OAAO,CAAC,CAAC;MAE/CZ,WAAW,CAACa,MAAM,CAACG,MAAM,GAAG,MAAM;QAAA,IAAAC,mBAAA;QAC9B,CAAAA,mBAAA,GAAAjB,WAAW,CAACa,MAAM,cAAAI,mBAAA,uBAAlBA,mBAAA,CAAoBC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UACpCV,EAAE,EAAEA,EAAE;UACNW,MAAM,EAAE;QACZ,CAAC,CAAC,CAAC;MACP,CAAC;MAEFrB,WAAW,CAACa,MAAM,CAACS,SAAS,GAAIC,GAAG,IAAK;QACnCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACrB,CAAC;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrB1B,WAAW,CAAC2B,UAAU,CAAC,CAAC;EAC5B,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBxB,OAAA;MACIyB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,GAAG,EAAErB,SAAU;MACfsB,aAAa,EAAEP;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC,kCAAC;AAACC,GAAA,GAnCGhC,MAAmB;AAqCzB,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}