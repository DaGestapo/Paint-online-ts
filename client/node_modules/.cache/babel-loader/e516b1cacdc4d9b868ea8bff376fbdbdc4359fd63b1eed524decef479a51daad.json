{"ast":null,"code":"import Figure from \"./Figure\";\nexport default class Line extends Figure {\n  constructor(canvas, socket, ctx, id) {\n    super(canvas, socket, ctx, id);\n    this.toolName = 'line';\n  }\n  pointerMoveHandler(e) {\n    super.pointerMoveHandler(e);\n    if (!this.startX || !this.startY || !this.width || !this.height) return;\n    if (this.mouseDown) {\n      this.draw(this.ctx, this.startX, this.startY, this.width, this.height);\n    }\n  }\n  pointerUpHandler(e) {\n    super.pointerUpHandler(e);\n    if (!this.startX || !this.startY || !this.width || !this.height) return;\n    this.socket.send(JSON.stringify({\n      id: this.id,\n      method: \"draw\",\n      figure: {\n        type: 'line',\n        x: this.startX,\n        y: this.startY,\n        w: this.width,\n        h: this.height\n      }\n    }));\n  }\n  staticDraw(ctx, x, y, w, h) {\n    if (!this.startX || !this.startY) return;\n    const nextImg = this.createImg();\n    ctx.drawImage(nextImg, 0, 0, 600, 400);\n\n    //ctx.moveTo(x, y);\n    ctx.lineTo(w + this.startX, h + this.startY);\n    ctx.stroke();\n  }\n  draw(ctx, x, y, w, h) {\n    if (!this.startX || !this.startY) return;\n    const nextImg = this.createImg();\n    ctx.clearRect(0, 0, 600, 400);\n    ctx.drawImage(nextImg, 0, 0, 600, 400);\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(w + this.startX, h + this.startY);\n    ctx.stroke();\n  }\n}","map":{"version":3,"names":["Figure","Line","constructor","canvas","socket","ctx","id","toolName","pointerMoveHandler","e","startX","startY","width","height","mouseDown","draw","pointerUpHandler","send","JSON","stringify","method","figure","type","x","y","w","h","staticDraw","nextImg","createImg","drawImage","lineTo","stroke","clearRect","beginPath","moveTo"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/tools/Line.ts"],"sourcesContent":["import  Figure  from \"./Figure\";\r\n\r\nexport default class Line extends Figure {\r\n\r\n    constructor(canvas: HTMLCanvasElement, socket: WebSocket, ctx: CanvasRenderingContext2D, id: string) {\r\n        super(canvas, socket, ctx, id);\r\n        this.toolName = 'line';\r\n    }\r\n\r\n    protected pointerMoveHandler(e: PointerEvent) {\r\n        super.pointerMoveHandler(e);\r\n        if(!this.startX || !this.startY || !this.width || !this.height) return;\r\n\r\n        if(this.mouseDown) {\r\n            this.draw(this.ctx, this.startX, this.startY, this.width, this.height);\r\n        }\r\n    }\r\n\r\n    protected pointerUpHandler(e: PointerEvent): void {\r\n        super.pointerUpHandler(e);\r\n        if(!this.startX || !this.startY || !this.width || !this.height) return;\r\n\r\n         this.socket.send(JSON.stringify({\r\n                 id: this.id,\r\n                 method: \"draw\",\r\n                 figure: {\r\n                     type: 'line',\r\n                     x: this.startX,\r\n                     y: this.startY,\r\n                     w: this.width,\r\n                     h: this.height\r\n                 },\r\n             }));\r\n    }\r\n\r\n    public staticDraw(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n        if(!this.startX || !this.startY) return;\r\n\r\n        const nextImg = this.createImg();\r\n        ctx.drawImage(nextImg, 0, 0, 600, 400);\r\n\r\n        //ctx.moveTo(x, y);\r\n        ctx.lineTo(w + this.startX, h + this.startY);\r\n        ctx.stroke();\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n        if(!this.startX || !this.startY) return;\r\n        \r\n        const nextImg = this.createImg();\r\n\r\n        ctx.clearRect(0, 0, 600, 400);\r\n        ctx.drawImage(nextImg, 0, 0, 600, 400);\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(w + this.startX, h + this.startY);\r\n        ctx.stroke();\r\n    } \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}