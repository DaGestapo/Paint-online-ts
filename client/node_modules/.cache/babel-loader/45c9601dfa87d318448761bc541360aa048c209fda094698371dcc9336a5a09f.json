{"ast":null,"code":"import { Brush, Circle, Eraser, Rect, Line } from '../tools/ToolsRouter';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nconst [canvas, ctx, socket, id] = [canvasState.canvas, canvasState.ctx, canvasState.socket, canvasState.id];\nexport const drawHandler = msg => {\n  if (!id || !ctx || !canvas || !socket) return;\n  if (!toolState.tool) return;\n  let [tool, toolName] = [toolState.tool, toolState.tool.getToolName];\n  const figure = msg.figure;\n  tool.savedCanvas = canvas.toDataURL();\n  switch (figure.type) {\n    case 'brush':\n      if (toolName === 'brush' && tool instanceof Brush) {\n        tool.draw(ctx, figure.x, figure.y);\n      } else {\n        tool = new Brush(canvas, socket, ctx, id);\n        if (tool instanceof Brush) {\n          tool.draw(ctx, figure.x, figure.y);\n        }\n      }\n      break;\n    case 'eraser':\n      console.log('eraser');\n      if (toolName === 'eraser' && tool instanceof Brush) {\n        tool.draw(ctx, figure.x, figure.y);\n      } else {\n        tool = new Eraser(canvas, socket, ctx, id);\n        if (tool instanceof Eraser) {\n          tool.draw(ctx, figure.x, figure.y);\n        }\n      }\n      break;\n    case 'rect':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'rect' && tool instanceof Rect) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Rect(canvas, socket, ctx, id);\n        if (tool instanceof Rect) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    case 'circle':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'circle' && tool instanceof Circle) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Circle(canvas, socket, ctx, id);\n        if (tool instanceof Circle) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    case 'line':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'line' && tool instanceof Line) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Line(canvas, socket, ctx, id);\n        if (tool instanceof Line) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    default:\n      break;\n  }\n};","map":{"version":3,"names":["Brush","Circle","Eraser","Rect","Line","canvasState","toolState","canvas","ctx","socket","id","drawHandler","msg","tool","toolName","getToolName","figure","savedCanvas","toDataURL","type","draw","x","y","console","log","w","h","staticDraw"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/sokcet/drawHandler.ts"],"sourcesContent":["import {MessageDrawI} from '../model/msgI';\r\nimport { Brush, Circle, Eraser, Rect, Line, Tool } from '../tools/ToolsRouter';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\n\r\n\r\nconst [canvas, ctx, socket, id] = [\r\n    canvasState.canvas, \r\n    canvasState.ctx, \r\n    canvasState.socket, \r\n    canvasState.id\r\n];\r\n\r\nexport const drawHandler = (msg: MessageDrawI) => {\r\n    if(!id || !ctx || !canvas || !socket) return;\r\n    if(!toolState.tool) return;\r\n\r\n    let [tool, toolName] = [\r\n        toolState.tool,\r\n        toolState.tool.getToolName\r\n    ];\r\n\r\n    const figure = msg.figure;\r\n\r\n    tool.savedCanvas = canvas.toDataURL();\r\n\r\n    switch (figure.type) {\r\n        case 'brush':\r\n            if(toolName === 'brush' && tool instanceof Brush) {\r\n                tool.draw(ctx, figure.x, figure.y);\r\n            } else {\r\n                tool = new Brush(canvas, socket, ctx, id);\r\n                if(tool instanceof Brush) {\r\n                    tool.draw(ctx, figure.x, figure.y);\r\n                }\r\n            }\r\n            break;\r\n            \r\n        case 'eraser':\r\n            console.log('eraser');\r\n            if(toolName === 'eraser' && tool instanceof Brush) {\r\n                tool.draw(ctx, figure.x, figure.y);\r\n               \r\n            } else {\r\n                tool = new Eraser(canvas, socket, ctx, id);\r\n                if(tool instanceof Eraser){\r\n                    tool.draw(ctx, figure.x, figure.y);\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'rect':\r\n            if(!figure.w || !figure.h) return;\r\n\r\n            if(toolName === 'rect' && tool instanceof Rect) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Rect(canvas, socket, ctx, id);\r\n                if(tool instanceof Rect) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'circle':\r\n            if(!figure.w || !figure.h) return;\r\n            if(toolName === 'circle' && tool instanceof Circle) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Circle(canvas, socket, ctx, id);\r\n                if(tool instanceof Circle) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'line':\r\n            if(!figure.w || !figure.h) return;\r\n\r\n            if(toolName === 'line' && tool instanceof Line) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Line(canvas, socket, ctx, id);\r\n                if(tool instanceof Line) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n}  \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}