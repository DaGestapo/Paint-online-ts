{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Toolbar.tsx\";\nimport '../styles/bars.scss';\nimport { Brush, Eraser, Rect, Circle, Line } from \"../tools/ToolsRouter\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = _ref => {\n  let {\n    id\n  } = _ref;\n  const changeColor = e => {\n    toolState.setStyleColor(e.target.value);\n    toolState.setFillColor(e.target.value);\n  };\n  if (canvasState.canvas || canvasState.socket || canvasState.ctx) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"brush\",\n        onClick: () => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.ctx, id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rect\",\n        onClick: () => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.ctx, id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"circle\",\n        onClick: () => toolState.setTool(new Circle(canvasState.canvas, canvasState.socket, canvasState.ctx, id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"eraser\",\n        onClick: () => toolState.setTool(new Eraser(canvasState.canvas, canvasState.socket, canvasState.ctx, id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"line\",\n        onClick: () => toolState.setTool(new Line(canvasState.canvas, canvasState.socket, canvasState.ctx, id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        onChange: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"undo\",\n        onClick: () => canvasState.undo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"redo\",\n        onClick: () => canvasState.redo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["Brush","Eraser","Rect","Circle","Line","canvasState","toolState","jsxDEV","_jsxDEV","Toolbar","_ref","id","changeColor","e","setStyleColor","target","value","setFillColor","canvas","socket","ctx","className","children","onClick","setTool","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","undo","redo","_c","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Toolbar.tsx"],"sourcesContent":["import { FC, ChangeEvent} from \"react\";\r\nimport '../styles/bars.scss';\r\n\r\nimport { Brush, Eraser, Rect, Circle, Line } from \"../tools/ToolsRouter\";\r\n\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\n\r\ninterface ToolbarI {\r\n    id: string;\r\n}\r\n\r\nconst Toolbar: FC<ToolbarI> = ({id}) => {\r\n\r\n    const changeColor = (e: ChangeEvent<HTMLInputElement>) => {\r\n        toolState.setStyleColor(e.target.value);\r\n        toolState.setFillColor(e.target.value);\r\n    }\r\n    if(canvasState.canvas || canvasState.socket || canvasState.ctx) {\r\n        return (\r\n            <div className=\"tool bar\">\r\n                <button \r\n                    className=\"brush\" \r\n                    onClick={() => toolState.setTool(new Brush(\r\n                        canvasState.canvas,\r\n                        canvasState.socket,\r\n                        canvasState.ctx,\r\n                        id\r\n                    ))}\r\n                />\r\n                <button \r\n                    className=\"rect\" \r\n                    onClick={() => toolState.setTool(new Rect(\r\n                        canvasState.canvas,\r\n                        canvasState.socket,\r\n                        canvasState.ctx,\r\n                        id\r\n                        ))}\r\n                    />\r\n                <button \r\n                    className=\"circle\"\r\n                    onClick={() => toolState.setTool(new Circle(\r\n                        canvasState.canvas,\r\n                        canvasState.socket,\r\n                        canvasState.ctx,\r\n                        id\r\n                        ))}\r\n                    />\r\n                <button \r\n                    className=\"eraser\" \r\n                    onClick={() => toolState.setTool(new Eraser(\r\n                        canvasState.canvas,\r\n                        canvasState.socket,\r\n                        canvasState.ctx,\r\n                        id\r\n                        ))}\r\n                    />\r\n                <button \r\n                    className=\"line\" \r\n                    onClick={() => toolState.setTool(new Line(\r\n                        canvasState.canvas,\r\n                        canvasState.socket,\r\n                        canvasState.ctx,\r\n                        id\r\n                        ))}\r\n                    />\r\n                <input \r\n                    type=\"color\" \r\n                    onChange={changeColor}\r\n                />\r\n                <button \r\n                    className=\"undo\" \r\n                    onClick={() => canvasState.undo()}\r\n                    />\r\n                <button \r\n                    className=\"redo\"\r\n                    onClick={() => canvasState.redo()}\r\n                    />\r\n                <button className=\"save\" />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Toolbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}