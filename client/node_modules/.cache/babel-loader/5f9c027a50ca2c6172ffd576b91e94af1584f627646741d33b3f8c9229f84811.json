{"ast":null,"code":"import Brush from \"./Brush\";\nexport default class Eraser extends Brush {\n  constructor(canvas, socket, ctx, id) {\n    super(canvas, socket, ctx, id);\n    this.saved = void 0;\n    this.color = void 0;\n    this.saved = this.ctx.strokeStyle;\n    this.color = '#fff';\n  }\n  pointerMoveHandler(e) {\n    if (this.mouseDown) {\n      let currentX = e.pageX - this.canvas.offsetLeft,\n        currentY = e.pageY - this.canvas.offsetTop;\n      this.socket.send(JSON.stringify({\n        id: this.id,\n        method: \"draw\",\n        figure: {\n          type: 'eraser',\n          x: currentX,\n          y: currentY\n        }\n      }));\n    }\n  }\n  draw(ctx, x, y) {\n    this.ctx.strokeStyle = this.color;\n    super.draw(ctx, x, y);\n    if (this.saved) {\n      this.ctx.strokeStyle = this.saved;\n    }\n  }\n}","map":{"version":3,"names":["Brush","Eraser","constructor","canvas","socket","ctx","id","saved","color","strokeStyle","pointerMoveHandler","e","mouseDown","currentX","pageX","offsetLeft","currentY","pageY","offsetTop","send","JSON","stringify","method","figure","type","x","y","draw"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/tools/Eraser.ts"],"sourcesContent":["import  Brush  from \"./Brush\";\r\n\r\nexport default class Eraser extends Brush {\r\n    private saved: string | CanvasGradient | CanvasPattern | null;\r\n    private color: string;\r\n\r\n    constructor(canvas : HTMLCanvasElement, socket: WebSocket, ctx: CanvasRenderingContext2D, id: string) {\r\n        super(canvas, socket, ctx, id);\r\n        this.saved = this.ctx.strokeStyle;\r\n        this.color = '#fff';\r\n    }\r\n\r\n    protected pointerMoveHandler(e: PointerEvent) {\r\n        if(this.mouseDown) {\r\n            let currentX = e.pageX - this.canvas.offsetLeft,\r\n                currentY = e.pageY - this.canvas.offsetTop;\r\n\r\n            this.socket.send(JSON.stringify({\r\n                id: this.id,\r\n                method: \"draw\",\r\n                figure: {\r\n                    type: 'eraser',\r\n                    x: currentX,\r\n                    y: currentY\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        this.ctx.strokeStyle = this.color;\r\n        super.draw(ctx, x, y);\r\n        if(this.saved) {\r\n            this.ctx.strokeStyle = this.saved\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAQA,KAAK,MAAO,SAAS;AAE7B,eAAe,MAAMC,MAAM,SAASD,KAAK,CAAC;EAItCE,WAAWA,CAACC,MAA0B,EAAEC,MAAiB,EAAEC,GAA6B,EAAEC,EAAU,EAAE;IAClG,KAAK,CAACH,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,EAAE,CAAC;IAAC,KAJ3BC,KAAK;IAAA,KACLC,KAAK;IAIT,IAAI,CAACD,KAAK,GAAG,IAAI,CAACF,GAAG,CAACI,WAAW;IACjC,IAAI,CAACD,KAAK,GAAG,MAAM;EACvB;EAEUE,kBAAkBA,CAACC,CAAe,EAAE;IAC1C,IAAG,IAAI,CAACC,SAAS,EAAE;MACf,IAAIC,QAAQ,GAAGF,CAAC,CAACG,KAAK,GAAG,IAAI,CAACX,MAAM,CAACY,UAAU;QAC3CC,QAAQ,GAAGL,CAAC,CAACM,KAAK,GAAG,IAAI,CAACd,MAAM,CAACe,SAAS;MAE9C,IAAI,CAACd,MAAM,CAACe,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC5Bf,EAAE,EAAE,IAAI,CAACA,EAAE;QACXgB,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;UACJC,IAAI,EAAE,QAAQ;UACdC,CAAC,EAAEZ,QAAQ;UACXa,CAAC,EAAEV;QACP;MACJ,CAAC,CAAC,CAAC;IACP;EACJ;EAEOW,IAAIA,CAACtB,GAA6B,EAAEoB,CAAS,EAAEC,CAAS,EAAE;IAC7D,IAAI,CAACrB,GAAG,CAACI,WAAW,GAAG,IAAI,CAACD,KAAK;IACjC,KAAK,CAACmB,IAAI,CAACtB,GAAG,EAAEoB,CAAC,EAAEC,CAAC,CAAC;IACrB,IAAG,IAAI,CAACnB,KAAK,EAAE;MACX,IAAI,CAACF,GAAG,CAACI,WAAW,GAAG,IAAI,CAACF,KAAK;IACrC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}