{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Toolbar.tsx\";\nimport '../styles/bars.scss';\nimport { Brush, Eraser, Rect, Circle, Line } from \"../tools/ToolsRouter\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = _ref => {\n  let {\n    id\n  } = _ref;\n  const changeColor = e => {\n    var _canvasState$socket;\n    toolState.setStyleColor(e.target.value);\n    toolState.setFillColor(e.target.value);\n    (_canvasState$socket = canvasState.socket) === null || _canvasState$socket === void 0 ? void 0 : _canvasState$socket.send(JSON.stringify({\n      id: id\n    }));\n  };\n\n  //     canvasState.socket?.send(JSON.stringify({\n  //         id: id,\n  //         method: 'connection',\n  //         username: username\n  //     }));\n  //   }\n\n  const changeTool = selectedTool => {\n    if (!canvasState.canvas || !canvasState.socket || !canvasState.ctx) return;\n    switch (selectedTool) {\n      case 'brush':\n        toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.ctx, id));\n        break;\n      case 'rect':\n        toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.ctx, id));\n        break;\n      case 'circle':\n        toolState.setTool(new Circle(canvasState.canvas, canvasState.socket, canvasState.ctx, id));\n        break;\n      case 'eraser':\n        toolState.setTool(new Eraser(canvasState.canvas, canvasState.socket, canvasState.ctx, id));\n        break;\n      case 'line':\n        toolState.setTool(new Line(canvasState.canvas, canvasState.socket, canvasState.ctx, id));\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tool bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"brush\",\n      onClick: () => changeTool('brush')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rect\",\n      onClick: () => changeTool('rect')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"circle\",\n      onClick: () => changeTool('circle')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"eraser\",\n      onClick: () => changeTool('eraser')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"line\",\n      onClick: () => changeTool('line')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      onChange: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"undo\",\n      onClick: () => canvasState.undo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"redo\",\n      onClick: () => canvasState.redo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["Brush","Eraser","Rect","Circle","Line","canvasState","toolState","jsxDEV","_jsxDEV","Toolbar","_ref","id","changeColor","e","_canvasState$socket","setStyleColor","target","value","setFillColor","socket","send","JSON","stringify","changeTool","selectedTool","canvas","ctx","setTool","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","undo","redo","_c","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Toolbar.tsx"],"sourcesContent":["import { FC, ChangeEvent} from \"react\";\r\nimport '../styles/bars.scss';\r\n\r\nimport { Brush, Eraser, Rect, Circle, Line } from \"../tools/ToolsRouter\";\r\n\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\n\r\ninterface ToolbarI {\r\n    id: string;\r\n}\r\n\r\n\r\nconst Toolbar: FC<ToolbarI> = ({id}) => {\r\n\r\n    const changeColor = (e: ChangeEvent<HTMLInputElement>) => {\r\n        toolState.setStyleColor(e.target.value);\r\n        toolState.setFillColor(e.target.value);\r\n\r\n        canvasState.socket?.send(JSON.stringify({\r\n            id: id,\r\n\r\n        }));\r\n    }\r\n\r\n//     canvasState.socket?.send(JSON.stringify({\r\n//         id: id,\r\n//         method: 'connection',\r\n//         username: username\r\n//     }));\r\n//   }\r\n\r\n   const changeTool = (selectedTool: string) => {\r\n        if( !canvasState.canvas || !canvasState.socket || !canvasState.ctx) return;\r\n        \r\n        switch (selectedTool) {\r\n            case 'brush':\r\n                toolState.setTool( new Brush(\r\n                    canvasState.canvas, \r\n                    canvasState.socket, \r\n                    canvasState.ctx, \r\n                    id) );\r\n                break;\r\n\r\n            case 'rect':\r\n                toolState.setTool( new Rect(\r\n                    canvasState.canvas,  \r\n                    canvasState.socket, \r\n                    canvasState.ctx, \r\n                    id) );\r\n                break;\r\n\r\n            case 'circle':\r\n                toolState.setTool( new Circle(\r\n                    canvasState.canvas,  \r\n                    canvasState.socket, \r\n                    canvasState.ctx, \r\n                    id) );\r\n                break;\r\n            \r\n            case 'eraser':\r\n                toolState.setTool( new Eraser(\r\n                    canvasState.canvas,  \r\n                    canvasState.socket, \r\n                    canvasState.ctx, \r\n                    id) );\r\n                break;\r\n\r\n            case 'line':\r\n                toolState.setTool( new Line(\r\n                    canvasState.canvas, \r\n                    canvasState.socket,\r\n                    canvasState.ctx, \r\n                    id) );\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n       \r\n        }\r\n   \r\n   \r\n\r\n    return (\r\n        <div className=\"tool bar\">\r\n            <button \r\n                className=\"brush\" \r\n                onClick={() => changeTool('brush')}\r\n            />\r\n            <button \r\n                className=\"rect\" \r\n                onClick={() => changeTool('rect')}\r\n                />\r\n            <button \r\n                className=\"circle\"\r\n                onClick={() => changeTool('circle')}\r\n                />\r\n            <button \r\n                className=\"eraser\" \r\n                onClick={() => changeTool('eraser')}\r\n                />\r\n            <button \r\n                className=\"line\" \r\n                onClick={() => changeTool('line')}\r\n                />\r\n            <input \r\n                type=\"color\" \r\n                onChange={changeColor}\r\n            />\r\n            <button \r\n                className=\"undo\" \r\n                onClick={() => canvasState.undo()}\r\n                />\r\n            <button \r\n                className=\"redo\"\r\n                onClick={() => canvasState.redo()}\r\n                />\r\n            <button className=\"save\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}