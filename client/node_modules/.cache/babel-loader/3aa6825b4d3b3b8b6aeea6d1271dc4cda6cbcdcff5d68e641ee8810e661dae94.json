{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mistR\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\ts\\\\paint-ts\\\\client\\\\src\\\\components\\\\Settingbar.tsx\";\nimport '../styles/bars.scss';\nimport toolState from '../store/toolState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settingbar = () => {\n  const changeLineWidth = e => {\n    let width = Number(e.target.value);\n    if (typeof width !== 'number') return;\n    toolState.setLineWidth(width);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting__thick\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0422\\u043E\\u043B\\u0449\\u0438\\u043D\\u0430 \\u043B\\u0438\\u043D\\u0438\\u0438: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: changeLineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Settingbar;\nexport default Settingbar;\nvar _c;\n$RefreshReg$(_c, \"Settingbar\");","map":{"version":3,"names":["toolState","jsxDEV","_jsxDEV","Settingbar","changeLineWidth","e","width","Number","target","value","setLineWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/components/Settingbar.tsx"],"sourcesContent":["import { ChangeEvent, FC } from \"react\";\r\nimport '../styles/bars.scss';\r\nimport toolState from '../store/toolState';\r\n\r\nconst Settingbar: FC = () => {\r\n\r\n\r\n    const changeLineWidth = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let width = Number(e.target.value);\r\n        if(typeof(width) !== 'number') return;\r\n        toolState.setLineWidth(width);\r\n\r\n        \r\n    }\r\n    return (\r\n        <div className=\"setting bar\">\r\n            <div className=\"setting__thick\">\r\n                <p>Толщина линии: </p>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={changeLineWidth}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settingbar;"],"mappings":";AACA,OAAO,qBAAqB;AAC5B,OAAOA,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAc,GAAGA,CAAA,KAAM;EAGzB,MAAMC,eAAe,GAAIC,CAAgC,IAAK;IAC1D,IAAIC,KAAK,GAAGC,MAAM,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAClC,IAAG,OAAOH,KAAM,KAAK,QAAQ,EAAE;IAC/BN,SAAS,CAACU,YAAY,CAACJ,KAAK,CAAC;EAGjC,CAAC;EACD,oBACIJ,OAAA;IAAKS,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBV,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BV,OAAA;QAAAU,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtBd,OAAA;QACIe,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEd;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAG,EAAA,GArBKhB,UAAc;AAuBpB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}