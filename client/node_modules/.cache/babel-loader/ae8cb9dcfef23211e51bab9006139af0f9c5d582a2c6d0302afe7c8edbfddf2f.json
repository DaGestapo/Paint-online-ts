{"ast":null,"code":"import canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport { drawHandler } from './drawHandler';\nimport { changeSettingsHandler } from './settingsHandler';\nimport { connectionHandler } from './connectionHandler';\nconst storeHandler = msg => {\n  switch (msg.type) {\n    case 'undo':\n      undoHandler(msg.id);\n      break;\n    default:\n      break;\n  }\n  function undoHandler(id) {\n    if (!canvasState.socket) return;\n    const lockStore = localStorage.getItem(id);\n    if (!lockStore) return;\n    const redoArr = JSON.parse(lockStore).redo;\n    if (redoArr.length !== 0) {\n      let src = redoArr[redoArr.length - 1];\n      if (!src) return;\n      const img = document.createElement('img');\n      img.src = src;\n      img.onload = () => {\n        if (!canvasState.ctx) return;\n        canvasState.ctx.clearRect(0, 0, 600, 400);\n        canvasState.ctx.drawImage(img, 0, 0, 600, 400);\n      };\n    }\n  }\n};\nexport const setSocketListener = socket => {\n  socket.onmessage = msg => {\n    const parsedMsg = JSON.parse(msg.data);\n    if (!toolState.tool || !canvasState.ctx) return;\n    switch (parsedMsg.method) {\n      case 'connection':\n        connectionHandler(parsedMsg);\n        break;\n      case 'draw':\n        drawHandler(parsedMsg);\n        break;\n      case 'store':\n        storeHandler(parsedMsg);\n        break;\n      case 'setting':\n        changeSettingsHandler(parsedMsg);\n        break;\n      case 'finish':\n        canvasState.pushToUndo();\n        canvasState.ctx.beginPath();\n        break;\n      default:\n        break;\n    }\n  };\n};\nexport const newUserConnected = (socket, id) => {\n  return username => {\n    var _canvasState$socket;\n    canvasState.setWebSocket(socket);\n    canvasState.setId(id);\n    (_canvasState$socket = canvasState.socket) === null || _canvasState$socket === void 0 ? void 0 : _canvasState$socket.send(JSON.stringify({\n      id: id,\n      method: 'connection',\n      username: username\n    }));\n  };\n};","map":{"version":3,"names":["canvasState","toolState","drawHandler","changeSettingsHandler","connectionHandler","storeHandler","msg","type","undoHandler","id","socket","lockStore","localStorage","getItem","redoArr","JSON","parse","redo","length","src","img","document","createElement","onload","ctx","clearRect","drawImage","setSocketListener","onmessage","parsedMsg","data","tool","method","pushToUndo","beginPath","newUserConnected","username","_canvasState$socket","setWebSocket","setId","send","stringify"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/sokcet/socket.ts"],"sourcesContent":["import canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\n\r\nimport { drawHandler } from './drawHandler';\r\nimport { changeSettingsHandler } from './settingsHandler';\r\nimport { connectionHandler } from './connectionHandler';\r\n\r\nimport { StoreI } from '../model/msgI';\r\n\r\nconst storeHandler = (msg: StoreI) => {\r\n\r\n    switch (msg.type) {\r\n        case 'undo':\r\n            undoHandler(msg.id);\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n\r\n    function undoHandler(id: string) {\r\n        if(!canvasState.socket) return;\r\n        const lockStore = localStorage.getItem(id);\r\n        if(!lockStore) return;\r\n\r\n        const redoArr: string[] = JSON.parse(lockStore).redo;\r\n        if(redoArr.length !== 0) {\r\n            let src = redoArr[redoArr.length - 1];\r\n            if(!src) return;\r\n            \r\n            const img = document.createElement('img');\r\n            img.src = src;\r\n            img.onload = () => {\r\n            if(!canvasState.ctx) return;\r\n            canvasState.ctx.clearRect(0, 0, 600, 400);\r\n            canvasState.ctx.drawImage(img, 0, 0, 600, 400);\r\n        }\r\n    }\r\n    }\r\n}\r\n\r\nexport const setSocketListener = (socket: WebSocket) => {\r\n    socket.onmessage = (msg) => {\r\n        const parsedMsg = JSON.parse(msg.data);\r\n        if(!toolState.tool || !canvasState.ctx) return;\r\n        switch (parsedMsg.method) {\r\n\r\n            case 'connection': \r\n                connectionHandler(parsedMsg);\r\n                break;\r\n\r\n            case 'draw':\r\n                drawHandler(parsedMsg);\r\n                break;\r\n\r\n            case 'store':\r\n                storeHandler(parsedMsg);\r\n                break;\r\n\r\n            case 'setting': \r\n                changeSettingsHandler(parsedMsg);\r\n                break;\r\n    \r\n            case 'finish':\r\n                canvasState.pushToUndo();\r\n                canvasState.ctx.beginPath();\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    \r\n    }\r\n} \r\n\r\nexport const newUserConnected = (socket: WebSocket, id: string): Function => {\r\n\r\n    return (username: string) => {\r\n        canvasState.setWebSocket(socket);\r\n        canvasState.setId(id);\r\n    \r\n        canvasState.socket?.send(JSON.stringify({\r\n          id: id,\r\n          method: 'connection',\r\n          username: username\r\n      }));\r\n    }\r\n  }\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,iBAAiB,QAAQ,qBAAqB;AAIvD,MAAMC,YAAY,GAAIC,GAAW,IAAK;EAElC,QAAQA,GAAG,CAACC,IAAI;IACZ,KAAK,MAAM;MACPC,WAAW,CAACF,GAAG,CAACG,EAAE,CAAC;MACnB;IAEJ;MACI;EACR;EAEA,SAASD,WAAWA,CAACC,EAAU,EAAE;IAC7B,IAAG,CAACT,WAAW,CAACU,MAAM,EAAE;IACxB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACJ,EAAE,CAAC;IAC1C,IAAG,CAACE,SAAS,EAAE;IAEf,MAAMG,OAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAACM,IAAI;IACpD,IAAGH,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE;MACrB,IAAIC,GAAG,GAAGL,OAAO,CAACA,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC;MACrC,IAAG,CAACC,GAAG,EAAE;MAET,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCF,GAAG,CAACD,GAAG,GAAGA,GAAG;MACbC,GAAG,CAACG,MAAM,GAAG,MAAM;QACnB,IAAG,CAACvB,WAAW,CAACwB,GAAG,EAAE;QACrBxB,WAAW,CAACwB,GAAG,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACzCzB,WAAW,CAACwB,GAAG,CAACE,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MAClD,CAAC;IACL;EACA;AACJ,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAIjB,MAAiB,IAAK;EACpDA,MAAM,CAACkB,SAAS,GAAItB,GAAG,IAAK;IACxB,MAAMuB,SAAS,GAAGd,IAAI,CAACC,KAAK,CAACV,GAAG,CAACwB,IAAI,CAAC;IACtC,IAAG,CAAC7B,SAAS,CAAC8B,IAAI,IAAI,CAAC/B,WAAW,CAACwB,GAAG,EAAE;IACxC,QAAQK,SAAS,CAACG,MAAM;MAEpB,KAAK,YAAY;QACb5B,iBAAiB,CAACyB,SAAS,CAAC;QAC5B;MAEJ,KAAK,MAAM;QACP3B,WAAW,CAAC2B,SAAS,CAAC;QACtB;MAEJ,KAAK,OAAO;QACRxB,YAAY,CAACwB,SAAS,CAAC;QACvB;MAEJ,KAAK,SAAS;QACV1B,qBAAqB,CAAC0B,SAAS,CAAC;QAChC;MAEJ,KAAK,QAAQ;QACT7B,WAAW,CAACiC,UAAU,CAAC,CAAC;QACxBjC,WAAW,CAACwB,GAAG,CAACU,SAAS,CAAC,CAAC;QAC3B;MAEJ;QACI;IACR;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACzB,MAAiB,EAAED,EAAU,KAAe;EAEzE,OAAQ2B,QAAgB,IAAK;IAAA,IAAAC,mBAAA;IACzBrC,WAAW,CAACsC,YAAY,CAAC5B,MAAM,CAAC;IAChCV,WAAW,CAACuC,KAAK,CAAC9B,EAAE,CAAC;IAErB,CAAA4B,mBAAA,GAAArC,WAAW,CAACU,MAAM,cAAA2B,mBAAA,uBAAlBA,mBAAA,CAAoBG,IAAI,CAACzB,IAAI,CAAC0B,SAAS,CAAC;MACtChC,EAAE,EAAEA,EAAE;MACNuB,MAAM,EAAE,YAAY;MACpBI,QAAQ,EAAEA;IACd,CAAC,CAAC,CAAC;EACL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}