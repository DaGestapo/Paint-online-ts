{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.ctx = null;\n    this.undo = [];\n    this.redo = [];\n    makeAutoObservable(this);\n  }\n  setCanvas(canvas) {\n    if (!canvas) return;\n    this.canvas = canvas;\n    this.ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n  }\n  pushToUndo() {\n    if (!this.canvas) return;\n    let img = this.canvas.toDataURL();\n    this.undo.push(img);\n  }\n}\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","ctx","undo","redo","setCanvas","getContext","pushToUndo","img","toDataURL","push"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/src/store/canvasState.tsx"],"sourcesContent":["import {makeAutoObservable} from 'mobx';\r\n\r\n\r\nclass CanvasState {\r\n    canvas: HTMLCanvasElement | null = null;\r\n    ctx: CanvasRenderingContext2D | null = null;\r\n    undo: Array<string> = [];\r\n    redo: Array<string> = [];\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n    }\r\n\r\n    public setCanvas(canvas: HTMLCanvasElement | null): void {\r\n        if(!canvas) return;\r\n\r\n        this.canvas = canvas;\r\n        this.ctx = canvas?.getContext(\"2d\");\r\n    }\r\n\r\n    public pushToUndo() {\r\n        if(!this.canvas) return;\r\n\r\n        let img = this.canvas.toDataURL();\r\n        this.undo.push(img);\r\n    }\r\n\r\n}\r\n\r\nexport default new CanvasState();"],"mappings":"AAAA,SAAQA,kBAAkB,QAAO,MAAM;AAGvC,MAAMC,WAAW,CAAC;EAMdC,WAAWA,CAAA,EAAG;IAAA,KALdC,MAAM,GAA6B,IAAI;IAAA,KACvCC,GAAG,GAAoC,IAAI;IAAA,KAC3CC,IAAI,GAAkB,EAAE;IAAA,KACxBC,IAAI,GAAkB,EAAE;IAGpBN,kBAAkB,CAAC,IAAI,CAAC;EAE5B;EAEOO,SAASA,CAACJ,MAAgC,EAAQ;IACrD,IAAG,CAACA,MAAM,EAAE;IAEZ,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,UAAU,CAAC,IAAI,CAAC;EACvC;EAEOC,UAAUA,CAAA,EAAG;IAChB,IAAG,CAAC,IAAI,CAACN,MAAM,EAAE;IAEjB,IAAIO,GAAG,GAAG,IAAI,CAACP,MAAM,CAACQ,SAAS,CAAC,CAAC;IACjC,IAAI,CAACN,IAAI,CAACO,IAAI,CAACF,GAAG,CAAC;EACvB;AAEJ;AAEA,eAAe,IAAIT,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}