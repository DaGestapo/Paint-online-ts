{"ast":null,"code":"import { Brush, Circle, Eraser, Rect, Line } from '../tools/ToolsRouter';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nconst [canvas, ctx, socket, id] = [canvasState.canvas, canvasState.ctx, canvasState.socket, canvasState.id];\nexport const drawHandler = msg => {\n  if (!id || !ctx || !canvas || !socket) return;\n  if (!toolState.tool) return;\n  const drawCaseHandler = (tool, newTool) => {\n    if (tool instanceof Brush) {\n      console.log('draw');\n      tool.draw(ctx, figure.x, figure.y);\n    } else {\n      console.log('new draw');\n      newTool.draw(ctx, figure.x, figure.y);\n    }\n  };\n  const figure = msg.figure;\n  let [tool, toolName] = [toolState.tool, toolState.tool.getToolName];\n  tool.savedCanvas = canvas.toDataURL();\n  switch (figure.type) {\n    case 'brush':\n      console.log('brush');\n      drawCaseHandler(tool, new Brush(canvas, socket, ctx, id));\n      break;\n    case 'eraser':\n      drawCaseHandler(tool, new Eraser(canvas, socket, ctx, id));\n      break;\n    case 'rect':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'rect' && tool instanceof Rect) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Rect(canvas, socket, ctx, id);\n        if (tool instanceof Rect) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    case 'circle':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'circle' && tool instanceof Circle) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Circle(canvas, socket, ctx, id);\n        if (tool instanceof Circle) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    case 'line':\n      if (!figure.w || !figure.h) return;\n      if (toolName === 'line' && tool instanceof Line) {\n        tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n      } else {\n        tool = new Line(canvas, socket, ctx, id);\n        if (tool instanceof Line) {\n          tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\n        }\n      }\n      break;\n    default:\n      break;\n  }\n};\n\n// if(toolName === 'brush' && tool instanceof Brush) {\n//     tool.draw(ctx, figure.x, figure.y);\n// } else {\n//     tool = new Brush(canvas, socket, ctx, id);\n//     if(tool instanceof Brush) {\n//         tool.draw(ctx, figure.x, figure.y);\n//     }\n// }","map":{"version":3,"names":["Brush","Circle","Eraser","Rect","Line","canvasState","toolState","canvas","ctx","socket","id","drawHandler","msg","tool","drawCaseHandler","newTool","console","log","draw","figure","x","y","toolName","getToolName","savedCanvas","toDataURL","type","w","h","staticDraw"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/sokcet/drawHandler.ts"],"sourcesContent":["import {MessageDrawI} from '../model/msgI';\r\nimport { Brush, Circle, Eraser, Rect, Line, Tool } from '../tools/ToolsRouter';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\n\r\n\r\nconst [canvas, ctx, socket, id] = [\r\n    canvasState.canvas, \r\n    canvasState.ctx, \r\n    canvasState.socket, \r\n    canvasState.id\r\n];\r\n\r\nexport const drawHandler = (msg: MessageDrawI) => {\r\n    if(!id || !ctx || !canvas || !socket) return;\r\n    if(!toolState.tool) return;\r\n\r\n    const drawCaseHandler = (tool: Object, newTool: any) =>{\r\n        if(tool instanceof Brush) {\r\n            console.log('draw');\r\n            tool.draw(ctx, figure.x, figure.y);\r\n        } else {\r\n            console.log('new draw');\r\n            newTool.draw(ctx, figure.x, figure.y);\r\n        }\r\n    }\r\n\r\n    const figure = msg.figure;\r\n\r\n    let [tool, toolName] = [\r\n        toolState.tool,\r\n        toolState.tool.getToolName\r\n    ];\r\n\r\n    tool.savedCanvas = canvas.toDataURL();\r\n\r\n    switch (figure.type) {\r\n        case 'brush':\r\n            console.log('brush');\r\n            drawCaseHandler(tool, new Brush(canvas, socket, ctx, id));\r\n            break;\r\n\r\n      \r\n            \r\n        case 'eraser':\r\n            drawCaseHandler(tool, new Eraser(canvas, socket, ctx, id));\r\n            break;\r\n\r\n        case 'rect':\r\n            if(!figure.w || !figure.h) return;\r\n            if(toolName === 'rect' && tool instanceof Rect) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Rect(canvas, socket, ctx, id);\r\n                if(tool instanceof Rect) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'circle':\r\n            if(!figure.w || !figure.h) return;\r\n            if(toolName === 'circle' && tool instanceof Circle) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Circle(canvas, socket, ctx, id);\r\n                if(tool instanceof Circle) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'line':\r\n            if(!figure.w || !figure.h) return;\r\n            if(toolName === 'line' && tool instanceof Line) {\r\n                tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n            } else {\r\n                tool = new Line(canvas, socket, ctx, id);\r\n                if(tool instanceof Line) {\r\n                    tool.staticDraw(ctx, figure.x, figure.y, figure.w, figure.h);\r\n                }\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n}  \r\n\r\n\r\n// if(toolName === 'brush' && tool instanceof Brush) {\r\n//     tool.draw(ctx, figure.x, figure.y);\r\n// } else {\r\n//     tool = new Brush(canvas, socket, ctx, id);\r\n//     if(tool instanceof Brush) {\r\n//         tool.draw(ctx, figure.x, figure.y);\r\n//     }\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}