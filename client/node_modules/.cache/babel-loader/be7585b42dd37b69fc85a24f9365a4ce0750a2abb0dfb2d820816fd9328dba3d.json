{"ast":null,"code":"import canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport { sokcetMessageHandler } from './drawHandler';\nimport { changeSetting } from './settingHandler';\nimport { localStorageHandler } from './localStorageHandler';\nexport const setSocketListener = socket => {\n  socket.onmessage = msg => {\n    const parsedMsg = JSON.parse(msg.data);\n    if (!toolState.tool || !canvasState.ctx) return;\n    switch (parsedMsg.method) {\n      case 'draw':\n        sokcetMessageHandler(parsedMsg);\n        break;\n      case 'setting':\n        changeSetting(parsedMsg);\n        break;\n      case 'localStorage':\n        localStorageHandler(parsedMsg);\n        break;\n      case 'finish':\n        canvasState.pushToUndo();\n        canvasState.ctx.beginPath();\n        break;\n      default:\n        break;\n    }\n  };\n};\nexport const handlerUserConnection = (socket, id) => {\n  return username => {\n    var _canvasState$socket;\n    canvasState.setWebSocket(socket);\n    canvasState.setId(id);\n    (_canvasState$socket = canvasState.socket) === null || _canvasState$socket === void 0 ? void 0 : _canvasState$socket.send(JSON.stringify({\n      id: id,\n      method: 'connection',\n      username: username\n    }));\n  };\n};","map":{"version":3,"names":["canvasState","toolState","sokcetMessageHandler","changeSetting","localStorageHandler","setSocketListener","socket","onmessage","msg","parsedMsg","JSON","parse","data","tool","ctx","method","pushToUndo","beginPath","handlerUserConnection","id","username","_canvasState$socket","setWebSocket","setId","send","stringify"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/sokcet/socket.ts"],"sourcesContent":["import canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\n\r\nimport { sokcetMessageHandler } from './drawHandler';\r\nimport { changeSetting } from './settingHandler';\r\nimport { localStorageHandler } from './localStorageHandler';\r\n\r\nexport const setSocketListener = (socket: WebSocket) => {\r\n    socket.onmessage = (msg) => {\r\n        const parsedMsg = JSON.parse(msg.data);\r\n        if(!toolState.tool || !canvasState.ctx) return;\r\n        switch (parsedMsg.method) {\r\n            case 'draw':\r\n                sokcetMessageHandler(parsedMsg);\r\n                break;\r\n\r\n            case 'setting': \r\n                changeSetting(parsedMsg);\r\n                break;\r\n\r\n            case 'localStorage':\r\n                localStorageHandler(parsedMsg)\r\n                break;\r\n    \r\n            case 'finish':\r\n                canvasState.pushToUndo();\r\n                canvasState.ctx.beginPath();\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    \r\n    }\r\n} \r\n\r\nexport const handlerUserConnection = (socket: WebSocket, id: string): Function => {\r\n\r\n    return (username: string) => {\r\n        canvasState.setWebSocket(socket);\r\n        canvasState.setId(id);\r\n    \r\n        canvasState.socket?.send(JSON.stringify({\r\n          id: id,\r\n          method: 'connection',\r\n          username: username\r\n      }));\r\n    }\r\n  }\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAASC,oBAAoB,QAAQ,eAAe;AACpD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,OAAO,MAAMC,iBAAiB,GAAIC,MAAiB,IAAK;EACpDA,MAAM,CAACC,SAAS,GAAIC,GAAG,IAAK;IACxB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,IAAI,CAAC;IACtC,IAAG,CAACX,SAAS,CAACY,IAAI,IAAI,CAACb,WAAW,CAACc,GAAG,EAAE;IACxC,QAAQL,SAAS,CAACM,MAAM;MACpB,KAAK,MAAM;QACPb,oBAAoB,CAACO,SAAS,CAAC;QAC/B;MAEJ,KAAK,SAAS;QACVN,aAAa,CAACM,SAAS,CAAC;QACxB;MAEJ,KAAK,cAAc;QACfL,mBAAmB,CAACK,SAAS,CAAC;QAC9B;MAEJ,KAAK,QAAQ;QACTT,WAAW,CAACgB,UAAU,CAAC,CAAC;QACxBhB,WAAW,CAACc,GAAG,CAACG,SAAS,CAAC,CAAC;QAC3B;MAEJ;QACI;IACR;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAACZ,MAAiB,EAAEa,EAAU,KAAe;EAE9E,OAAQC,QAAgB,IAAK;IAAA,IAAAC,mBAAA;IACzBrB,WAAW,CAACsB,YAAY,CAAChB,MAAM,CAAC;IAChCN,WAAW,CAACuB,KAAK,CAACJ,EAAE,CAAC;IAErB,CAAAE,mBAAA,GAAArB,WAAW,CAACM,MAAM,cAAAe,mBAAA,uBAAlBA,mBAAA,CAAoBG,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC;MACtCN,EAAE,EAAEA,EAAE;MACNJ,MAAM,EAAE,YAAY;MACpBK,QAAQ,EAAEA;IACd,CAAC,CAAC,CAAC;EACL,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}