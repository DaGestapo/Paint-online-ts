{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.socket = null;\n    this.username = null;\n    this.ctx = null;\n    this.id = null;\n    makeAutoObservable(this);\n  }\n  checkForExist() {\n    if (!this.id || !this.ctx || !this.canvas || !this.socket) return false;\n    return true;\n  }\n  setUsername(username) {\n    this.username = username;\n  }\n  setWebSocket(socket) {\n    this.socket = socket;\n  }\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n  }\n  setId(id) {\n    this.id = id;\n  }\n  undo() {\n    if (!this.id || !this.socket || !this.canvas) return;\n    const undoRedoArr = this.getCanvasSorages(this.id);\n    if (undoRedoArr) {\n      const prevSrc = undoRedoArr[0].pop();\n      const currSrc = this.canvas.toDataURL();\n      if (!prevSrc || !currSrc) return;\n      undoRedoArr[1].push(currSrc);\n      localStorage.setItem(this.id, JSON.stringify({\n        current: prevSrc,\n        undo: undoRedoArr[0],\n        redo: undoRedoArr[1]\n      }));\n      this.socket.send(JSON.stringify({\n        id: this.id,\n        method: 'store',\n        type: 'undo'\n      }));\n    }\n  }\n  redo() {\n    if (!this.id || !this.socket || !this.canvas) return;\n    const undoRedoArr = this.getCanvasSorages(this.id);\n    if (undoRedoArr) {\n      const prevSrc = undoRedoArr[1].pop();\n      const currSrc = this.canvas.toDataURL();\n      if (!prevSrc || !currSrc) return;\n      undoRedoArr[0].push(currSrc);\n      localStorage.setItem(this.id, JSON.stringify({\n        current: prevSrc,\n        undo: undoRedoArr[0],\n        redo: undoRedoArr[1]\n      }));\n      this.socket.send(JSON.stringify({\n        id: this.id,\n        method: 'store',\n        type: 'redo'\n      }));\n    }\n  }\n  getCanvasSorages(id) {\n    const lockalStore = localStorage.getItem(id);\n    if (!lockalStore) return null;\n    const undoArr = JSON.parse(lockalStore).undo;\n    const redoArr = JSON.parse(lockalStore).redo;\n    return [undoArr, redoArr];\n  }\n}\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","socket","username","ctx","id","checkForExist","setUsername","setWebSocket","setCanvas","getContext","setId","undo","undoRedoArr","getCanvasSorages","prevSrc","pop","currSrc","toDataURL","push","localStorage","setItem","JSON","stringify","current","redo","send","method","type","lockalStore","getItem","undoArr","parse","redoArr"],"sources":["C:/Users/mistR/OneDrive/Рабочий стол/React/ts/paint-ts/client/src/store/canvasState.ts"],"sourcesContent":["import {makeAutoObservable} from 'mobx';\r\n\r\n\r\nclass CanvasState {\r\n    canvas: HTMLCanvasElement | null = null;\r\n    socket: WebSocket | null = null\r\n    username: string | null = null;\r\n    ctx: CanvasRenderingContext2D | null = null;\r\n    id: string | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    public checkForExist(): boolean {\r\n        if(!this.id || !this.ctx || !this.canvas || !this.socket) return false;\r\n        return true;\r\n    }\r\n\r\n    public setUsername(username: string) {\r\n        this.username = username;\r\n    }\r\n\r\n    public setWebSocket(socket: WebSocket) {\r\n        this.socket = socket;\r\n    }\r\n\r\n    public setCanvas(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n    }\r\n\r\n    public setId(id: string) {\r\n        this.id = id;\r\n    }\r\n\r\n    public undo() {\r\n        if(!this.id || !this.socket || !this.canvas) return;\r\n        const undoRedoArr = this.getCanvasSorages(this.id);\r\n\r\n        if(undoRedoArr) {\r\n            const prevSrc = undoRedoArr[0].pop();\r\n            const currSrc = this.canvas.toDataURL();\r\n            if(!prevSrc || !currSrc) return;\r\n\r\n            undoRedoArr[1].push(currSrc);\r\n\r\n            localStorage.setItem(this.id, JSON.stringify({\r\n                current: prevSrc,\r\n                undo: undoRedoArr[0],\r\n                redo: undoRedoArr[1]\r\n            }));\r\n\r\n            this.socket.send(JSON.stringify({\r\n                id: this.id,\r\n                method: 'store',\r\n                type: 'undo'\r\n            }))\r\n        }\r\n    }\r\n\r\n    public redo() {\r\n        if(!this.id || !this.socket || !this.canvas) return;\r\n        const undoRedoArr = this.getCanvasSorages(this.id);\r\n\r\n        if(undoRedoArr) {\r\n            const prevSrc = undoRedoArr[1].pop();\r\n            const currSrc = this.canvas.toDataURL();\r\n            if(!prevSrc || !currSrc) return;\r\n\r\n            undoRedoArr[0].push(currSrc);\r\n\r\n            localStorage.setItem(this.id, JSON.stringify({\r\n                current: prevSrc,\r\n                undo: undoRedoArr[0],\r\n                redo: undoRedoArr[1]\r\n            }));\r\n\r\n            this.socket.send(JSON.stringify({\r\n                id: this.id,\r\n                method: 'store',\r\n                type: 'redo'\r\n            }))\r\n        }\r\n    }\r\n\r\n    private getCanvasSorages(id: string): Array<Array<string>> | null {\r\n        const lockalStore = localStorage.getItem(id);\r\n        if(!lockalStore) return null;\r\n\r\n        const undoArr: string[] = JSON.parse(lockalStore).undo;\r\n        const redoArr: string[] = JSON.parse(lockalStore).redo;\r\n\r\n        return [undoArr, redoArr];\r\n    }\r\n\r\n}\r\n\r\nexport default new CanvasState();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}